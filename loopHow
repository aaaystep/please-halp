from lxml import html
import requests
import re

og = requests.get('http://store.steampowered.com/app/484870/?snr=1_7_7_230_150_3')
tree = html.fromstring(og.content)
#here we have a steam page, which we have pulled the html data from

keyf_sub = tree.xpath('//div[@class="details_block"]//a/@href')
new_list = [x for x in keyf_sub if re.search('/news/', x)][0]
#goes to details block element in the page and looks for a link with "/news/" somewhere in it

new_page = requests.get(new_list)
new_tree = html.fromstring(new_page.content)
#now we do the same request/html pull we did prior but now for that new link

new_word = str(new_tree.xpath('//div[@class="body"]/text()'))
#makes the html tree into a searchable string PAGE 02
new_link = (new_tree.xpath('//*[@id="more_posts_url"]/@href'))[0]
#also in this link we're looking for our tertiary link labeled under html id "more_posts"url"

deeper = requests.get(new_link)
deeper_string = deeper.text
#we find said link and make its html data into a searchable string

#deeper_t = html.fromstring(deeper.content)
#ddeep_page = (deeper_t.xpath('//*[@id="more_posts_url"]/@href'))[0]
#HERE IS THE QUESTION: i also know that this page can contain ANOTHER link, also under the same html id
  #how to loop?

#unitycount = new_word.count('Unity') + new_word.count('Unity.') + new_word.count('Unity,')
#unrealcount = new_word.count('Unreal') + new_word.count('Unreal.') + new_word.count('Unreal,') + new_word.count('UE') + new_word.count('UE4')
#print(unitycount, unrealcount)
#ultimate goal is to count the number of keywords that appear in all these pages
